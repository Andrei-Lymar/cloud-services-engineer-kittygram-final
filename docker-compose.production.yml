version: '3.3'

services:
  backend:
    image: lyandrei/kittygram_backend:latest
    platform: linux/amd64
    container_name: backend
    volumes:
      - media:/app/media
      - backend_static:/backend_static
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - default

  frontend:
    image: lyandrei/kittygram_frontend:latest
    platform: linux/amd64
    container_name: frontend
    volumes:
      - frontend_static:/app/build
    depends_on:
      - backend
    networks:
      - default

  gateway:
    image: lyandrei/kittygram_gateway:latest
    platform: linux/amd64
    container_name: gateway
    ports:
      - "80:80"
    volumes:
      - frontend_static:/var/html/static/
      - backend_static:/var/html/backend
      - media:/var/html/media
    depends_on:
      - backend
      - frontend
    restart: always
    networks:
      - default

  postgres:
    image: postgres:13.10
    platform: linux/amd64
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: always
    networks:
      - default

volumes:
  frontend_static:
  backend_static:
  media:
  pgdata:
